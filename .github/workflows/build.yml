name: Flash Translation Layer CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  LIBCLANG_PATH: "/usr/lib/llvm-6.0/lib"
  CARGO_BIN_PATH: "/root/.cargo/bin"

jobs:
  build-and-test-x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: prepare environment
      run: |
        sudo apt-get update -y && sudo apt-get clean
        sudo apt-get install --no-install-recommends -y git make gcc g++ libglib2.0-dev libiberty-dev
        sudo apt-get install --no-install-recommends -y cppcheck flawfinder cflow
        sudo apt-get install --no-install-recommends -y python3-pip
        sudo apt-get install --no-install-recommends -y libclang-dev clang libbz2-dev
        sudo apt-get install --no-install-recommends -y curl
        sudo pip3 install lizard==1.17.0
    - name: make check
      run: make check
    - name: make flow
      run: make flow
    - name: make
      run: make
    - name: make test
      run: make clean && make test USE_LOG_SILENT=1
    - name: make integration-test
      run: make clean && make integration-test
    - name: make benchmark.out
      run: make clean && make benchmark.out
    - name: make benchmark.out with legacy random
      run: make clean && make benchmark.out USE_LEGACY_RANDOM=1
  rust-binding-test-x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: prepare environment
      run: |
        sudo apt-get update -y && sudo apt-get clean
        sudo apt-get install --no-install-recommends -y git make gcc g++ libglib2.0-dev libiberty-dev
        sudo apt-get install --no-install-recommends -y cppcheck flawfinder cflow
        sudo apt-get install --no-install-recommends -y python3-pip
        sudo apt-get install --no-install-recommends -y libclang-dev clang libbz2-dev
        sudo apt-get install --no-install-recommends -y curl
    - name: make rust-binding-test
      run: |
        make clean
        sudo curl https://sh.rustup.rs -sSf | sudo bash -s -- -y
        sudo rustup install stable
        sudo rustup default stable
        sudo source "$HOME/.cargo/env" && sudo PATH="${CARGO_BIN_PATH}:${PATH}" make rust-binding-test
