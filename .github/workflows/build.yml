name: Flash Translation Layer CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  LIBCLANG_PATH: "/usr/lib/llvm-6.0/lib"
  CARGO_BIN_PATH: "/root/.cargo/bin"

jobs:
  build-and-test-x86_64:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: prepare environment
      run: |
        sudo apt-get update -y && sudo apt-get clean
        sudo apt-get install --no-install-recommends -y git make gcc g++ libglib2.0-dev libiberty-dev
        sudo apt-get install --no-install-recommends -y cppcheck flawfinder cflow
        sudo apt-get install --no-install-recommends -y python3-pip
        sudo apt-get install --no-install-recommends -y libclang-dev clang libbz2-dev
        sudo apt-get install --no-install-recommends -y curl
        curl https://sh.rustup.rs -sSf | bash -s -- -y
        echo 'source $HOME/.cargo/env' >> $HOME/.bashrc
        sudo pip3 install lizard==1.17.0
    - name: make check
      run: make check
    - name: make flow
      run: make flow
    - name: make
      run: make
    - name: make test
      run: make clean && make test USE_LOG_SILENT=1
    - name: make integration-test
      run: make clean && make integration-test
    - name: make benchmark.out
      run: make clean && make benchmark.out
    - name: make benchmark.out with legacy random
      run: make clean && make benchmark.out USE_LEGACY_RANDOM=1
    - name: make rust-binding-test
      run: make clean && PATH="${CARGO_BIN_PATH}:${PATH}" make rust-binding-test
  build-and-test-arm:
    runs-on: ubuntu-latest
    steps:
      - uses: easimon/maximize-build-space@v7
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: pguyot/arm-runner-action@v2
        with:
          commands: |
            grep MemTotal /proc/meminfo
            sudo apt-get update -y && sudo apt-get clean
            sudo apt-get install --no-install-recommends -y git make gcc g++ libglib2.0-dev libiberty-dev
            sudo apt-get install --no-install-recommends -y cppcheck flawfinder cflow
            sudo apt-get install --no-install-recommends -y python3-pip
            sudo apt-get install --no-install-recommends -y libclang-dev clang libbz2-dev
            sudo apt-get install --no-install-recommends -y curl
            curl https://sh.rustup.rs -sSf | bash -s -- -y
            echo 'source $HOME/.cargo/env' >> $HOME/.bashrc
            sudo pip3 install lizard==1.17.0
            make check
            make flow
            make
            make clean && make test USE_LOG_SILENT=1
            make clean && make integration-test
            make clean && make benchmark.out
            make clean && make benchmark.out USE_LEGACY_RANDOM=1
            make clean && PATH="${CARGO_BIN_PATH}:${PATH}" make rust-binding-test
